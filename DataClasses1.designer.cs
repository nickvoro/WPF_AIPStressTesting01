#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPF_AIPStressTesting01
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hypdm")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertm_statuse(m_statuse instance);
    partial void Updatem_statuse(m_statuse instance);
    partial void Deletem_statuse(m_statuse instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WPF_AIPStressTesting01.Properties.Settings.Default.hypdmConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<m_statuse> m_statuses
		{
			get
			{
				return this.GetTable<m_statuse>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.m_statuses")]
	public partial class m_statuse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _machine_id;
		
		private int _status;
		
		private System.DateTime _status_dt;
		
		private string _progname;
		
		private string _properties;
		
		private byte _processed;
		
		private System.Nullable<System.DateTime> _processed_dt;
		
		private System.Data.Linq.Binary _ts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmachine_idChanging(string value);
    partial void Onmachine_idChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Onstatus_dtChanging(System.DateTime value);
    partial void Onstatus_dtChanged();
    partial void OnprognameChanging(string value);
    partial void OnprognameChanged();
    partial void OnpropertiesChanging(string value);
    partial void OnpropertiesChanged();
    partial void OnprocessedChanging(byte value);
    partial void OnprocessedChanged();
    partial void Onprocessed_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onprocessed_dtChanged();
    partial void OntsChanging(System.Data.Linq.Binary value);
    partial void OntsChanged();
    #endregion
		
		public m_statuse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine_id", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string machine_id
		{
			get
			{
				return this._machine_id;
			}
			set
			{
				if ((this._machine_id != value))
				{
					this.Onmachine_idChanging(value);
					this.SendPropertyChanging();
					this._machine_id = value;
					this.SendPropertyChanged("machine_id");
					this.Onmachine_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_dt", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime status_dt
		{
			get
			{
				return this._status_dt;
			}
			set
			{
				if ((this._status_dt != value))
				{
					this.Onstatus_dtChanging(value);
					this.SendPropertyChanging();
					this._status_dt = value;
					this.SendPropertyChanged("status_dt");
					this.Onstatus_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_progname", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string progname
		{
			get
			{
				return this._progname;
			}
			set
			{
				if ((this._progname != value))
				{
					this.OnprognameChanging(value);
					this.SendPropertyChanging();
					this._progname = value;
					this.SendPropertyChanged("progname");
					this.OnprognameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_properties", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string properties
		{
			get
			{
				return this._properties;
			}
			set
			{
				if ((this._properties != value))
				{
					this.OnpropertiesChanging(value);
					this.SendPropertyChanging();
					this._properties = value;
					this.SendPropertyChanged("properties");
					this.OnpropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processed", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte processed
		{
			get
			{
				return this._processed;
			}
			set
			{
				if ((this._processed != value))
				{
					this.OnprocessedChanging(value);
					this.SendPropertyChanging();
					this._processed = value;
					this.SendPropertyChanged("processed");
					this.OnprocessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processed_dt", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> processed_dt
		{
			get
			{
				return this._processed_dt;
			}
			set
			{
				if ((this._processed_dt != value))
				{
					this.Onprocessed_dtChanging(value);
					this.SendPropertyChanging();
					this._processed_dt = value;
					this.SendPropertyChanged("processed_dt");
					this.Onprocessed_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ts", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ts
		{
			get
			{
				return this._ts;
			}
			set
			{
				if ((this._ts != value))
				{
					this.OntsChanging(value);
					this.SendPropertyChanging();
					this._ts = value;
					this.SendPropertyChanged("ts");
					this.OntsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
